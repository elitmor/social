{"version":3,"file":"static/js/119.cb70d674.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/profile/myPosts/MyPost/MyPost.module.css?dfa9","components/profile/myPosts/MyPost/MyPost.js","webpack://social-network/./src/components/profile/myPosts/MyPosts.module.css?000b","components/profile/myPosts/MyPosts.js","components/profile/myPosts/MyPostsContainer.js","webpack://social-network/./src/components/profile/profileInfo/ProfileInfo.module.css?df08","components/profile/profileInfo/ProfileStatus/ProfileStatus.js","components/profile/profileInfo/ProfileInfo.js","components/profile/Profile.js","components/profile/ProfileContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MyPost_item__3DHF8\",\"avatar\":\"MyPost_avatar__2RnEx\",\"text\":\"MyPost_text__poP5F\"};","import avatar from \"../../../../assets/avatar.svg\";\nimport styles from \"./MyPost.module.css\";\n\nconst MyPost = ({ message, likesCount }) => {\n  return (\n    <div className={styles.item}>\n      <img className={styles.avatar} src={avatar} alt='avatar' />\n      <p className={styles.text}>{message}</p>\n      <div className='count'>{likesCount}</div>\n    </div>\n  );\n};\n\nexport default MyPost;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"MyPosts_btn__N+PvX\"};","import { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../../../common/formsControls/formsControls\";\nimport {\n  maxLengthCreator,\n  required,\n} from \"../../../utils/validators/validators\";\nimport MyPost from \"./MyPost/MyPost\";\nimport styles from \"./MyPosts.module.css\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPosts = (props) => {\n  const items = props.posts.map((item) => (\n    <MyPost key={item.id} message={item.message} likesCount={item.likesCount} />\n  ));\n\n  const onAddPost = (value) => {\n    props.addPost(value.newPostText);\n  };\n\n  return (\n    <div>\n      <AddNewPostFormRedux onSubmit={onAddPost} />\n      {items}\n    </div>\n  );\n};\n\nconst AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Field\n        component={Textarea}\n        name='newPostText'\n        placeholder='Enter your message'\n        validate={[required, maxLength10]}\n      />\n      <button className={styles.btn}>Add post</button>\n    </form>\n  );\n};\n\nconst AddNewPostFormRedux = reduxForm({ form: \"profileAddNewPostForm\" })(\n  AddNewPostForm\n);\n\nexport default MyPosts;\n","import { connect } from \"react-redux\";\nimport { addPost } from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPost(newPostText));\n    },\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"info\":\"ProfileInfo_info__s0OE8\"};","import { useEffect, useState } from \"react\";\n\nconst ProfileStatus = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div>\n      {editMode ? (\n        <div>\n          <input\n            onChange={onStatusChange}\n            onBlur={deactivateEditMode}\n            autoFocus={true}\n            type='text'\n            value={status}\n          />\n        </div>\n      ) : (\n        <div>\n          <span onDoubleClick={activateEditMode}>{status || \"---\"}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatus;\n","import Preloader from \"../../../common/preloader/Preloader\";\nimport styles from \"./ProfileInfo.module.css\";\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\n\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      <h4 className={styles.info}>ProfileInfo</h4>\n      <p>{profile.fullName}</p>\n      <img src={profile.photos.large} alt='avatar' />\n      <p>{profile.contacts.github}</p>\n      <ProfileStatus status={status} updateStatus={updateStatus} />\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import MyPostsContainer from \"./myPosts/MyPostsContainer\";\nimport ProfileInfo from \"./profileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n  return (\n    <div className='profile'>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport {\n  getProfile,\n  getStatus,\n  updateStatus,\n} from \"../../redux/profile-reducer\";\nimport Profile from \"./Profile\";\n\nclass ProfileContainer extends Component {\n  componentDidMount() {\n    let userId = this.props.router.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    this.props.getProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n      />\n    );\n  }\n}\n\nfunction withRouter(Component) {\n  function ComponentWithRouterProp(props) {\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return <Component {...props} router={{ location, navigate, params }} />;\n  }\n  return ComponentWithRouterProp;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, { getProfile, getStatus, updateStatus }),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer);\n"],"names":["message","likesCount","className","styles","src","avatar","alt","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","items","posts","map","item","id","value","addPost","newPostText","connect","state","profilePage","dispatch","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","type","onDoubleClick","profile","fullName","photos","large","contacts","github","Preloader","ProfileContainer","userId","this","router","params","authorizedUserId","history","push","getProfile","getStatus","Component","compose","auth","isAuth","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect"],"sourceRoot":""}